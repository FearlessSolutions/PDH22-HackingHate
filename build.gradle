plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.7.20'
    id 'com.github.johnrengelman.shadow' version '7.1.2' apply false
}

repositories {
    mavenCentral()
}

subprojects {
    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'application'

    group = 'tech.fearless.purpledatahacks'
    version = '1.0.0'

    repositories {
        mavenCentral()
    }

    test {
        useJUnitPlatform()
    }

    compileKotlin {
        kotlinOptions.jvmTarget = '17'
    }

    compileTestKotlin {
        kotlinOptions.jvmTarget = '17'
    }
}

def nonFunctionSubmodules = ['DataPrep']

configure(subprojects.find { !nonFunctionSubmodules.contains(it.name) }) {
    apply plugin: 'com.github.johnrengelman.shadow'

    configurations {
        invoker
    }

    dependencies {
        // Every function needs this dependency to get the Functions Framework API.
        implementation 'com.google.cloud.functions:functions-framework-api:1.0.4'
        implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.4'
        implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.13.4'
        implementation 'io.github.microutils:kotlin-logging:3.0.4'
        implementation 'org.slf4j:slf4j-simple:2.0.5'

        // To run function locally using Functions Framework's local invoker
        invoker 'com.google.cloud.functions.invoker:java-function-invoker:1.1.1'

        testImplementation 'org.jetbrains.kotlin:kotlin-test'
        testImplementation 'com.google.cloud.functions:functions-framework-api:1.0.4'
    }

    task("buildFunction", type: Copy) {
        group = "build"
        dependsOn(tasks.shadowJar)
        from("$buildDir/libs/${project.name}-${project.version}-all.jar")
        into("$buildDir/../../deploy-${project.name}/")
    }

    task("removeDeployFiles", type: Delete) {
        group = "build"
        delete("$buildDir/../../deploy-${project.name}/")
    }

    tasks.clean.dependsOn(tasks.removeDeployFiles)
}
